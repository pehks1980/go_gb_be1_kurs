-- cleanup run under master user
DROP TABLE IF EXISTS users CASCADE;
DROP TYPE IF EXISTS e_role;
DROP TABLE IF EXISTS user_data;
DROP DATABASE IF EXISTS weblink;
Drop USER IF EXISTS weblink;

-- create db and user grant usage on it
create database weblink;
create user weblink password 'weblink';
grant all privileges on database weblink to weblink;

-- run under weblink tables creation in that database
BEGIN;

--  'SU' //#SuperUser
--  'CR' //#shortlink creator
--  'US'  //#shortlink user

CREATE TYPE e_role AS ENUM (
    'SU',
    'CR',
    'US');
-- Таблица пользователей
CREATE TABLE users (
                       id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                       uid VARCHAR (50) NOT NULL, -- ключ пользователя в токене md5(username+password+email)
                       username VARCHAR ( 50 ) NOT NULL,
                       password VARCHAR ( 50 ) NOT NULL,
                       email VARCHAR ( 255 ) NOT NULL,
                       created_on TIMESTAMPTZ NOT NULL,
                       last_login TIMESTAMPTZ,
                       is_active BOOL DEFAULT 't', -- удаление пользователя
                       role e_role NOT NULL , -- роль пользователя
                       is_balance_blocked BOOL DEFAULT 'f', -- блокировка из за отриц баланса
                       balance NUMERIC (4,2) default 00.00, -- кошелек пользователя default = 0
                       -- санитайзер uid
                       constraint users_uid_pkey primary key (id),
                       CONSTRAINT users_username_key UNIQUE (username)

);
--- INDEX for table users
CREATE INDEX users_username_idx ON users USING btree (username);

-- Таблица данных ссылок
CREATE TABLE user_data (
                           id BIGINT GENERATED BY DEFAULT AS IDENTITY, -- ключ
                           user_id bigint,
                           url VARCHAR (255), -- УРЛ
                           shorturl VARCHAR (64), -- короткая ссылка
                           datetime TIMESTAMPTZ,
                           is_active BOOL DEFAULT 't',
                           redirs INT default 0,
                           --PRIMARY KEY (id),
                           -- санитайзер id
                           constraint user_data_id_pkey primary key (id),
                           -- проверка что оба поля не null
                           CONSTRAINT user_data_url_assert CHECK (shorturl IS NOT NULL AND url is NOT NULL),
                           CONSTRAINT user_data_shorturl_key UNIQUE (shorturl),
                           CONSTRAINT fk_user
                               FOREIGN KEY(user_id)
                                   REFERENCES users(id)
                                       ON DELETE CASCADE
);
--- INDEX for table user_data
CREATE INDEX user_data_uid_shorturl_idx ON user_data USING btree (user_id,shorturl);
CREATE INDEX user_data_datetime_idx ON user_data USING btree (datetime);

--- Таблица финансовых транзакций
CREATE TABLE users_transactions (
                         id bigint generated by default as identity,
                         datetime TIMESTAMPTZ NOT NULL,
                         uid_from bigint NOT NULL,
                         uid_to bigint NOT NULL,
                         amount NUMERIC (4,2) NOT NULL,
                         description varchar (128), -- описание операции
                         -- санитайзер id
                         constraint users_transactions_id_pkey primary key (id)
);
--- INDEX for table users_transactions
CREATE INDEX user_transactions_datetime_idx ON users_transactions USING btree (datetime);

COMMIT;

begin;
-- проверка на предмет добавления данных пользователя и его ссылки
INSERT INTO users (uid,username, password, email, created_on, role)
    VALUES ('123','Moby','123','',current_timestamp,'SU');

INSERT INTO user_data (user_id,url,shorturl,redirs)
    values ((select id from users where username = 'Moby'),'www.mail.ru','asdfrg.dfg1',0);

INSERT INTO users (uid, username, password, email, created_on, role, balance)
    VALUES ('321','Вован','123','',current_timestamp,'US',99.00);

INSERT INTO user_data (user_id,url,shorturl,redirs)
    values ((select id from users where username = 'Вован'),'www.mail.ru','asdfrg.dfg2',0);
commit;

-- описание проекта
/*
 Сервис коротких ссылок дает доступ к базе ссылок для обычных пользователей роль US,
 пользователь проходит регистрацию на сайте и ложит деньги на свой счет.
 При открытии какой то ссылки у пользователя происходит оплата открытия ссылки (допустим ссылка хранит что то ценное)
 10 у.е. в счет пользователя SU - cуперюзера который имеет полные права на все операции на этом сайте.
 Есть пользователь со статусом CR - он может создавать ссылки на сайте, за каждую созданную ссылку на сайте он получает
 50 у.е. со счета пользователя SU. права всех ролей заданы в соотвественно их смыслу, например обычный пользователь
 имеет право закинуть деньги к себе на счет, вывести все ссылки в базе и открыть ссылку которую он хочет.
 у пользователя CR - есть право смотреть свои ссылки, снимать деньги со своего счета, создавать ссылку.
 Пользователь SU имеет неограниченные права на все операции с любыми данными и пользователями и методами этой системы.

 система включает в себя веб сервер на go который реализует все на ввиде API, аутентификацию, авторизацию, хранение
 данных пользователей и данных ссылок в субд pg.

 в данный момент в прошлом курсе был реализован проект апи, в качестве хранилища используется файл.
 добавление возможности хранения данных в субд и доп методы позволят выполнить данное описание - и проапгрейдить проект.
 обеспечить конкурентный доступ для многих пользователей одновременно.
 */
